##OpenPPL_License_Text##
//*****************************************************************************
//
// OpenPPL Library
//   Supporting functions for OpenPPL.
//   These functions will be loaded by OpenHoldem in the background
//   and will be available both for OpenPPL and OH-script users.
//   This library is mostly written in OH-script,
//   but it can be extended by OpenPPL-functions, as both formats are 100% compatible.
//
// OpenPPL is part of the OpenHoldem project
//   Source code:           http://code.google.com/p/openholdembot/
//   Download page:         https://sites.google.com/site/openholdempokerbot/downloads
//   Forums:                http://www.maxinmontreal.com/forums/index.php
//   Licensed under GPL v3: http://www.gnu.org/licenses/gpl.html
//
// The original PPL (Poker Programming Language) got invented by
//   Shanky Bonusbots:      http://bonusbots.com/support/index.php
//
// Required OpenHoldem version: 7.0.2 or later
//
// Contributors:
//   Bob3456
//   CoolBotMe123
//   CrumbleSunday
//   Dr.Kaktuz
//   Efu
//   Fn101
//   Fqfq	
//   Gecko
//   JConner
//   JokeDoke
//   KaeKruse
//   Kyo
//   Lavezzi
//   MerzkiyTipon
//   Morello
//   MrRuder
//   Nik0
//   NPNG
//   Poker_Dog
//   Postenjak
//   Rambam
//   Relhby
//   Satanikut
//   Stangelnator
//   SteveG1963
//   Strikles
//   SuperBlak
//   TheHighFish
//   ThemAndMe
//   Want2Learn
//   Zolp
//
//*****************************************************************************

//*****************************************************************************
//
// OpenPPL - History Symbols
//
//
//*****************************************************************************

##Calls##
WHEN (BotsActionsOnThisRoundIncludingChecks == 0) RETURN CallsBeforeOurFirstAction FORCE
WHEN Others RETURN (me_re_MemCalls + CallsSinceLastPlay) FORCE

##MaxOpponentStackSize##
me_re_MaxOpponentStackSize

##MinOpponentStackSize##
me_re_MinOpponentStackSize

##NumberOfRaisesBeforeFlop##
WHEN (betround == ConstBetRoundPreflop) RETURN Raises FORCE
WHEN (betround >  ConstBetRoundPreflop) RETURN me_re_MemRaisesBeforeFlop FORCE
WHEN Others RETURN 0 FORCE

##NumberOfRaisesOnFlop##
WHEN (betround == ConstBetRoundFlop) RETURN Raises FORCE
WHEN (betround >  ConstBetRoundFlop) RETURN me_re_MemRaisesOnFlop FORCE
WHEN Others RETURN 0 FORCE

##NumberOfRaisesOnTurn##
WHEN (betround == ConstBetRoundTurn) RETURN Raises FORCE
WHEN (betround >  ConstBetRoundTurn) RETURN me_re_MemRaisesOnTurn FORCE
WHEN Others RETURN 0 FORCE

##Raises##
WHEN Others RETURN (me_re_MemRaises + RaisesSinceLastPlay) FORCE

##RaisesBeforeFlop##
WHEN (NumberOfRaisesBeforeFlop > 0) RETURN True FORCE

##RaisesOnFlop##
WHEN (NumberOfRaisesOnFlop > 0) RETURN True FORCE

##RaisesOnTurn##
WHEN (NumberOfRaisesOnTurn > 0) RETURN True FORCE

##StartingChips##
me_re_MemStartingChips

##StartingStackSize##
me_re_MemStartingStackSize





##Bets##
me_re_MemBets

##BotsLastAction##
// Just to be extra safe...
[(betround == ConstBetRoundPreflop) AND (BotsActionsOnThisRoundIncludingChecks == 0)] ? None :
// Caring about a possible check, when a fold could not have happened
[me_re_MemBotsLastAction == Fold] ? Check :
// Computing BotsLastAction from prevation
// k_prevaction_undefined = -2
// k_prevaction_fold = -1
// k_prevaction_check = 0		// new in OpenHoldem
// k_prevaction_call = 1
// k_prevaction_raise = 2		// min-raise
// k_prevaction_betsize = 3	// "stated wager", i.e. using f$betsize
// k_prevaction_allin = 4
// k_prevaction_jam = 5
//
// Successful allin
(PrevActionWasAllin AND (balance == 0)) ? RaiseMax :
// Failed allin
(PrevActionWasAllin AND (balance >= 0)) ? Raise :
// Raising (FL and NL)
((prevaction == 2) OR (prevaction == 3)) ? Raise :
// calling
(prevaction == 1) ? Call :
// Checking postflop
((prevaction == 0) AND (betround > 1) AND (currentbet == 0)) ? Check :
// Checking preflop
((prevaction == 0) AND (betround == 1) AND (currentbet <= bblind)) ? Check :
// "Checking" when it was a call
// Actually OH does auto-adapt prevaction after such actions
// but we try to be extra safe
((prevaction == 0) AND (betround == 1) AND (currentbet > bblind)) ? Call :
// Folding (might be used in sitour formulas)
(prevaction == -1) ? Fold :
// No autoplayer-actions, but human being at ManualMode
sitename$openholdem ? (HINT_Counting_Only_Autoplayer_Actions_Not_Manual_User_Actions + None) : 
// None
(prevaction == -1) ? None :
ERROR_IncorrectBotsLastAction

##BotsLastPreflopAction##
me_re_MemBotsLastPreflopAction



##Checks##
me_re_MemChecks



##MissingSmallBlind##
// !!! To be implemented in OH
me_re_MemMissingSmallBlind







##UpdateMemorySymbolsOnHandReset##
UpdateMemorySymbolsOnNewRound

##UpdateMemorySymbolsOnNewRound##
WHEN Others Set me_st_MemRaises_0
WHEN Others Set me_st_MemCalls_0

##UpdateMemorySymbolsAfterAutoplayerAction##
WHEN Others Set me_st_MemRaises_Raises
WHEN Others Set me_st_MemCalls_Calls