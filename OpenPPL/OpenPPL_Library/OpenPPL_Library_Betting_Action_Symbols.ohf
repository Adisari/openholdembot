##OpenPPL_License_Text##
//*****************************************************************************
//
// OpenPPL Library
//   Supporting functions for OpenPPL.
//   These functions will be loaded by OpenHoldem in the background
//   and will be available both for OpenPPL and OH-script users.
//   This library is mostly written in OH-script,
//   but it can be extended by OpenPPL-functions, as both formats are 100% compatible.
//
// OpenPPL is part of the OpenHoldem project
//   Source code:           http://code.google.com/p/openholdembot/
//   Download page:         https://sites.google.com/site/openholdempokerbot/downloads
//   Forums:                http://www.maxinmontreal.com/forums/index.php
//   Licensed under GPL v3: http://www.gnu.org/licenses/gpl.html
//
// The original PPL (Poker Programming Language) got invented by
//   Shanky Bonusbots:      http://bonusbots.com/support/index.php
//
// Required OpenHoldem version: 11.0.0 or later
//
// Contributors:
//   Bob3456
//   CoolBotMe123
//   CrumbleSunday
//   Dr.Kaktuz
//   Efu
//   Fn101
//   Fqfq	
//   Gecko
//   JConner
//   JokeDoke
//   KaeKruse
//   Kyo
//   Lavezzi
//   MerzkiyTipon
//   Morello
//   MrRuder
//   Nik0
//   NPNG
//   Poker_Dog
//   Postenjak
//   Rambam
//   Relhby
//   Satanikut
//   Stangelnator
//   SteveG1963
//   Strikles
//   SuperBlak
//   TheHighFish
//   ThemAndMe
//   Want2Learn
//   Zolp
//
//*****************************************************************************

//*****************************************************************************
//
// OpenPPL - BettingAction Symbols
//
//*****************************************************************************

##AggressorChair##
// raischair (formerly ac_aggressor) alone is somewhat unreliable, as it gets scraped (by bets).
// But if we raise and there are super-fast calls behind us (e.g. at PokerAcademy),
// then we don't have stable frames and soon we will switch to the next betting round.
// (There are however no problems, if somebody else raises,
// because we always get stable frames at out turn.)
// So we also check for our last action and the amount to call.
// (-1 = fold 0 = check 1 = call 2 = raise e3 = betsize 4 = allin)
(((prevaction ==  2) OR (prevaction == 3)) AND (AmountToCall == 0)) ? userchair :
raischair

##BigBlindSittingOut##
(BigBlindChair < 0) ? ERROR_BigBlindChair_Not_Recognized__Check_Your_TableMap :
((playersactivebits >> BigBlindChair & 1) == 0)

##SmallBlindSittingOut##
(BigBlindChair < 0) ? ERROR_BigBlindChair_Not_Recognized__Check_Your_TableMap :
((playersactivebits >> SmallBlindChair & 1) == 0)

##OpponentsLeftSittingOut##
(opponentsactivebits & opponentsplayingbits) == 0

##BotCalledBeforeFlop##
   (sitename$openholdem ? HINT_Counting_Only_Autoplayer_Actions_Not_Manual_User_Actions : False)
OR didcallround1

##BotCalledOnFlop##
   (sitename$openholdem ? HINT_Counting_Only_Autoplayer_Actions_Not_Manual_User_Actions : False)
OR didcallround2

##BotCalledOnTurn##
   (sitename$openholdem ? HINT_Counting_Only_Autoplayer_Actions_Not_Manual_User_Actions : False)
OR didcallround3

##BotCalledOnRiver##
   (sitename$openholdem ? HINT_Counting_Only_Autoplayer_Actions_Not_Manual_User_Actions : False)
OR didcallround4

##BotCheckedPreflop##
   (sitename$openholdem ? HINT_Counting_Only_Autoplayer_Actions_Not_Manual_User_Actions : False)
OR didchecround1

##BotCheckedOnFlop##
   (sitename$openholdem ? HINT_Counting_Only_Autoplayer_Actions_Not_Manual_User_Actions : False)
OR didchecround2

##BotCheckedOnTurn##
   (sitename$openholdem ? HINT_Counting_Only_Autoplayer_Actions_Not_Manual_User_Actions : False)
OR didchecround3

##BotCheckedOnRiver##
   (sitename$openholdem ? HINT_Counting_Only_Autoplayer_Actions_Not_Manual_User_Actions : False)
OR didchecround4

##BotIsLastRaiser##
(AggressorChair==userchair)

##BotRaisedBeforeFlop##
   (sitename$openholdem ? HINT_Counting_Only_Autoplayer_Actions_Not_Manual_User_Actions : False)
OR didraisround1 
OR didbetsizeround1

##BotRaisedOnFlop##
   (sitename$openholdem ? HINT_Counting_Only_Autoplayer_Actions_Not_Manual_User_Actions : False)
OR didraisround2 
OR didbetsizeround2

##BotRaisedOnTurn##
   (sitename$openholdem ? HINT_Counting_Only_Autoplayer_Actions_Not_Manual_User_Actions : False)
OR didraisround3 
OR didbetsizeround3

##BotsActionsOnFlop##
WHEN (betround == ConstBetRoundFlop) RETURN BotsActionsOnThisRound FORCE
WHEN Others RETURN
  ((sitename$openholdem ? HINT_Counting_Only_Autoplayer_Actions_Not_Manual_User_Actions : 0)
  // Checks are not counted
  + didcallround2 
  + didraisround2 
  + didbetsizeround2) FORCE

##BotsActionsOnTurn##
WHEN (betround == ConstBetRoundTurn) RETURN BotsActionsOnThisRound FORCE
WHEN Others RETURN
  ((sitename$openholdem ? HINT_Counting_Only_Autoplayer_Actions_Not_Manual_User_Actions : 0)
  // Checks are not counted
  + didcallround3 
  + didraisround3 
  + didbetsizeround3) FORCE
  
##ActionCounterCorrectionForUpdateInProgress##
// If we update OpenPPL memory symbols after an autoplayer-action
// then OpenHoldems autoplayer-symbols already are updated
// and the sum of actions is "one ahead" 
// (compared to the situation when we took a decision)
// That's why we need a correction
WHEN me_re_MemUpdateOfOpenPPLMemorySymbolsInProgress RETURN -1 FORCE
WHEN Others RETURN 0 FORCE

##BotsActionsOnThisRound##
// Special condition to ease simulations at Manualmode 
// without the need for hand-resets
WHEN ((betround == ConstBetRoundPreflop) AND (currentbet < bblind)) RETURN 0 FORCE
WHEN ((betround > ConstBetRoundPreflop) AND (currentbet == 0)) RETURN 0 FORCE
WHEN (BotsActionsOnThisRoundAdapted < 0) RETURN 0 FORCE
WHEN Others RETURN BotsActionsOnThisRoundAdapted FORCE
 
##BotsActionsOnThisRoundIncludingChecks##
// Special condition to ease simulations at Manualmode 
// without the need for hand-resets
WHEN ((betround == ConstBetRoundPreflop) AND (currentbet < bblind)) RETURN 0 FORCE
WHEN (BotsActionsOnThisRoundIncludingChecksAdapted < 0) RETURN 0 FORCE
WHEN Others RETURN BotsActionsOnThisRoundIncludingChecksAdapted FORCE

##BotsActionsOnThisRoundAdapted##
[(sitename$openholdem ? HINT_Counting_Only_Autoplayer_Actions_Not_Manual_User_Actions : 0)
// Checks are not counted per definition.
// Folds and allins are not relevant, as then the hand is over for us.
+ didcall 
+ didrais 
+ didbetsize
+ ActionCounterCorrectionForUpdateInProgress]
   
##BotsActionsOnThisRoundIncludingChecksAdapted##
[(sitename$openholdem ? HINT_Counting_Only_Autoplayer_Actions_Not_Manual_User_Actions : 0)
// Folds and allins are not relevant, as then the hand is over for us.
+ didchec 
+ didcall 
+ didbetsize 
+ didrais
+ ActionCounterCorrectionForUpdateInProgress]

##BotsActionsPreflop##
WHEN (betround == ConstBetRoundPreflop) RETURN BotsActionsOnThisRound FORCE
WHEN Others RETURN
  ((sitename$openholdem ? HINT_Counting_Only_Autoplayer_Actions_Not_Manual_User_Actions : 0)
  // Checks are not counted per definition
  // and we can't check preflop without posting a blind out of order (first hand only).
  + didcallround1 
  + didraisround1 
  + didbetsizeround1) FORCE

##CallsBeforeOurFirstAction##
WHEN (BotsActionsOnThisRoundIncludingChecks > 0) RETURN 0 FORCE
WHEN Others RETURN nopponentscalling FORCE

##CallsSinceLastPlay##
WHEN (BotsActionsOnThisRoundIncludingChecks == 0) RETURN 0 FORCE
WHEN Others RETURN nopponentscalling FORCE

##CallsSinceLastRaise##
WHEN (PlayersRaisingOrColdCallingTheLastRaise <= 0) RETURN HINT_There_Is_No_Raiser_Therefore_No_CallsSinceLastRaise FORCE
WHEN Others RETURN (PlayersRaisingOrColdCallingTheLastRaise - 1) FORCE

##Folds##
WHEN (betround == ConstBetRoundPreflop) RETURN (nplayersdealt  - nopponentsplaying - 1) FORCE
WHEN (betround == ConstBetRoundFlop)    RETURN (nplayersround2 - nopponentsplaying - 1) FORCE
WHEN (betround == ConstBetRoundTurn)    RETURN (nplayersround3 - nopponentsplaying - 1) FORCE
WHEN (betround == ConstBetRoundRiver)   RETURN (nplayersround4 - nopponentsplaying - 1) FORCE
WHEN Others RETURN ERROR_Betround_Out_Of_Range FORCE

##LastAggressorActsAfterUs##		
   ac_agchair_after 
AND NOT BotIsLastRaiser

##NoBettingOnFlop##
(nbetsround2 == 0)

##NoBettingOnTurn##
(nbetsround3 == 0)

##OpponentCalledOnFlop##
    (betround > ConstBetRoundFlop)
AND ((didraisround2 + didbetsizeround2) == 1)
AND NOT didchecround2
AND NOT didcallround2
AND NoVillainBetOrRaisedOnFlop
##OpponentCalledOnTurn##
    (betround > ConstBetRoundTurn)
AND ((didraisround3 + didbetsizeround3) == 1)
AND NOT didchecround3
AND NOT didcallround3
AND NoVillainBetOrRaisedOnTurn

##RaisesSinceLastPlay##
WHEN (BotsActionsOnThisRoundIncludingChecks == 0) RETURN RaisesBeforeOurFirstAction FORCE
WHEN (BotsActionsOnThisRoundIncludingChecks == 1) RETURN RaisesSinceLastPlayOnOurSecondAction FORCE
WHEN (BotsActionsOnThisRoundIncludingChecks >= 2) RETURN RaisesSinceLastPlayAfterOurSecondAction FORCE
WHEN Others RETURN ERROR_BotsActionsOnThisRound_Out_Of_Range FORCE